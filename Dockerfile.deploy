# build
FROM node:16-alpine as build-react
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
ENV NODE_ENV production
ENV REACT_APP_USERS_SERVICE_URL $REACT_APP_USERS_SERVICE_URL
COPY ./services/client/package*.json ./
RUN npm install
RUN npm install react-scripts@4.0.3
COPY ./services/client/ .
RUN rm .eslintrc.json
RUN npm run build

# production
FROM nginx:stable-alpine as production

ENV DEBIAN_FRONTEND noninteractive
ENV GECKODRIVER_VER v0.29.0
ENV FIREFOX_VER 87.0

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV FLASK_ENV=production
ENV APP_SETTINGS=src.config.ProductionConfig
ENV CONSUMER_KEY=7cS0tvzAEKuNNFGylpNB4G12p
ENV CONSUMER_SECRET=NT37VeZfFqxmce5f3tjT4sO5qCr7g7Whxc213SrQh5O3hWTR49
ENV ACCESS_TOKEN=1468262996694679571-R1HwMsujLNHkLKz6XJz1dwfQlBfGGb
ENV ACCESS_SECRET=CDAKLwfkp9L6VuxqgC8RkhpaASVSu6LKGOGXEUGU6mxSZ

WORKDIR /app
RUN apk update && \
    apk add --no-cache --virtual build-deps \
    openssl-dev libffi-dev gcc python3-dev musl-dev g++ \
    postgresql-dev netcat-openbsd \
    && apk add firefox-esr

RUN curl -sSLO https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VER}/geckodriver-${GECKODRIVER_VER}-linux64.tar.gz \
   && tar zxf geckodriver-*.tar.gz \
   && mv geckodriver /usr/bin/

RUN python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache
COPY --from=build-react /app/build /usr/share/nginx/html
COPY ./services/nginx/default.conf /etc/nginx/conf.d/default.conf
COPY ./services/users/requirements.txt ./
RUN pip install -r requirements.txt
RUN pip install gunicorn
COPY ./services/users .
CMD gunicorn -b 0.0.0.0:5000 manage:app --daemon && \
      sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && \
      nginx -g 'daemon off;'
